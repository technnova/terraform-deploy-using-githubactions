name: "Terraform Deployment"
on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ main ]
defaults:
  run:
    shell: bash

env:
  ENVIRONMENT: test
    
permissions:
  id-token: write
  contents: read # This is required for actions/checkout@v2
  
jobs:
  terraform:
    name:   "terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Auth to PACCAR AWS
        uses: aws-actions/configure-aws-credentials@v1
        #uses: PACCAR-Digital/actions-aws-auth@main
        
        with:
          role-to-assume: arn:aws:iam::053342002484:role/github-oidc
          aws-region: us-east-1
           #role: "arn:aws:iam::955167096225:role/github-actions-oidc-dummy"
      #- run: |
        #   aws sts get-caller-identity
          
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: |
           rm -rf .terraform
           terraform init -backend-config=${ENVIRONMENT}/backend.tfvars -upgrade=true -no-color -input=false
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -var-file=${ENVIRONMENT}/terraform.tfvars -no-color
        continue-on-error: true
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: apply
        run: terraform apply -auto-approve -input=false -var-file=${ENVIRONMENT}/terraform.tfvars
      - name: Terraform destroy
        if: github.ref == 'refs/heads/destroy'
        id: destroy
        run: terraform destroy -auto-approve -input=false -var-file=${ENVIRONMENT}/terraform.tfvars
      - name: Update Pull Request
        uses: actions/github-script@v6.1.0 
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
            
